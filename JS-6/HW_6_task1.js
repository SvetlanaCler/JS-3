// 1. Цикл for..of в массиве
//   - Создайте массив [1,2,3,4,5,6,7,8,9,10]
//   - Создайте цикл for..of, бегущий по массиву, в котором будет реализована следующая логика:
//     если элемент четный - возведет его в квадрат
//     если элемент нечетный - возведет его в 3ю степень

'use strict';
const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
const arrayNumbers = [];
for (const number of numbers)
    if (number % 2 === 0) {
        arrayNumbers.push(number ** 2) 
    }else{
        arrayNumbers.push(number ** 3)
    }
    console.log(arrayNumbers);
    

// 2. Методы массивов
//   - Создайте массив [1,2,3,4,5]
//   - Добавьте в конец массива число 6 соответствующим методом
//   - Добавьте в начало массива число 0 соответствующим методом
//   - Удалите элемент с индексом 2 из массива соответствующим методом
//   - Удалите последний элемент из массива соответствующим методом
//   В результате вы должны получить [0, 1, 3, 4, 5]

const arrayNum = [1, 2, 3, 4, 5];
arrayNum.push(6);
arrayNum.unshift(0);
arrayNum.splice(2,1);
arrayNum.pop();
console.log(arrayNum)

// 3. Деструктуризация массивов
//   - Создайте массив из 5 любых чисел (придумать числа самим)
//   - Через деструктуризацию получите в новые переменные первый, второй и остальные элементы массива
//   - Пример: [1,2,3,4,5] => first === 1; second === 2, rest === [3,4,5]

const arrayOfNumbers = [1, 5, 20, 100, 1000];
const [first, second, ...rest] = arrayOfNumbers;
console.log(first);
console.log(second);
console.log(rest); 

// 4. Конкатенация массивов
//   - Создайте массив с числами [1,2,3,4,5]
//   - Создайте еще 1 массив с числами [6, 7, 8, 9, 10]
//   - Создайте переменную mergedArray, который будет хранить значения из массивов 1 и 2
//   - Используйте спред оператор

const arrayOne = [1, 2, 3, 4, 5];
const arrayTwo = [6, 7, 8, 9, 10];
const mergedArray = [...arrayOne,...arrayTwo];
console.log(mergedArray);